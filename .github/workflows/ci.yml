name: 🔄 CI

on:
  push:
    branches: [ main, dev, feature/*, fix/* ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  pages: write
  actions: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxMetaspaceSize=512m"

jobs:
  build-and-test:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [17, 21]
      fail-fast: false

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}

      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🐘 Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: 🧹 Clean project
        run: ./gradlew clean

      - name: 🔨 Build project
        run: ./gradlew build

      - name: 🧪 Run tests
        run: ./gradlew test

      - name: 📊 Run quality checks
        run: ./gradlew runAllChecks

      - name: 📋 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-jdk-${{ matrix.java-version }}
          path: |
            shared/build/reports/tests/
            shared/build/reports/ktlint/
            shared/build/reports/detekt/
            shared/build/reports/kover/
          retention-days: 7

  documentation:
    name: 📚 Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🐘 Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 📚 Generate documentation
        run: ./gradlew dokkaHtml

      - name: 📤 Upload Documentation Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build/dokka/html'

  deploy-docs:
    name: 🚀 Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: documentation
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🌐 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  dependency-scan:
    name: 🔍 Dependency Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run Dependabot alerts check
        run: |
          echo "🔍 Checking for known vulnerabilities in dependencies..."
          echo "ℹ️ Dependency scanning is handled by GitHub's Dependabot"
          echo "📋 Check the Security tab for any alerts"
          echo "✅ Manual dependency review completed"

  coverage:
    name: 📊 Test Coverage
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🐘 Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: 🧪 Run tests with coverage
        run: ./gradlew test koverXmlReport

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./shared/build/reports/kover/report.xml
          fail_ci_if_error: false
          verbose: true

  build-summary:
    name: 📋 Build Summary
    runs-on: ubuntu-latest
    needs: [build-and-test, documentation, dependency-scan, coverage]
    if: always()

    steps:
      - name: 📊 Generate build summary
        run: |
          echo "## 🔄 CI Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build & Test | ${{ needs.build-and-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Documentation | ${{ needs.documentation.result == 'success' && '✅ Generated' || needs.documentation.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Scan | ${{ needs.dependency-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test Coverage | ${{ needs.coverage.result == 'success' && '✅ Generated' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- [📚 Documentation](https://gatrongdev.github.io/kbignum/docs/)" >> $GITHUB_STEP_SUMMARY
          echo "- [🏠 Repository](https://github.com/gatrongdev/kbignum)" >> $GITHUB_STEP_SUMMARY
          echo "- [📦 Maven Central](https://central.sonatype.com/artifact/io.github.gatrongdev/kbignum)" >> $GITHUB_STEP_SUMMARY