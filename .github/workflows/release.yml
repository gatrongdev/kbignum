name: 🚀 Release

on:
  push:
    branches: [ main ]
    paths:
      - 'shared/build.gradle.kts'

permissions:
  contents: write

jobs:
  release:
    name: 🎉 Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Get version from gradle
        id: version
        run: |
          VERSION=$(grep 'version = ' shared/build.gradle.kts | head -1 | sed 's/.*version = "\(.*\)".*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📋 Current version: $VERSION"

      - name: ✅ Check if tag exists
        id: tag_check
        run: |
          if git tag | grep -q "^v${{ steps.version.outputs.version }}$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Tag v${{ steps.version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "✅ Tag v${{ steps.version.outputs.version }} does not exist yet"
          fi

      - name: ☕ Setup JDK
        if: steps.tag_check.outputs.exists == 'false'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📱 Setup Android SDK
        if: steps.tag_check.outputs.exists == 'false'
        uses: android-actions/setup-android@v3

      - name: 🐘 Setup Gradle
        if: steps.tag_check.outputs.exists == 'false'
        uses: gradle/actions/setup-gradle@v3

      - name: 🔨 Build project
        if: steps.tag_check.outputs.exists == 'false'
        run: ./gradlew build test

      - name: 📝 Generate changelog
        if: steps.tag_check.outputs.exists == 'false'
        id: changelog
        run: |
          VERSION="v${{ steps.version.outputs.version }}"
          
          # Get the latest tag or use initial commit
          PREVIOUS_TAG=$(git tag --sort=-version:refname | head -1)
          if [ -z "$PREVIOUS_TAG" ]; then
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          
          echo "📋 Generating changelog from $PREVIOUS_TAG to HEAD"
          
          # Get commits since last tag
          COMMITS=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD --no-merges)
          
          # Create changelog
          cat << EOF > changelog.md
          ## 🚀 What's New in $VERSION

          ### 📋 Changes
          $COMMITS

          ### 📦 Installation

          #### Gradle (Kotlin DSL)
          \`\`\`kotlin
          dependencies {
              implementation("io.github.gatrongdev:kbignum:${{ steps.version.outputs.version }}")
          }
          \`\`\`

          #### Gradle (Groovy)
          \`\`\`gradle
          dependencies {
              implementation 'io.github.gatrongdev:kbignum:${{ steps.version.outputs.version }}'
          }
          \`\`\`

          ### 🔗 Links
          - 📚 [Documentation](https://gatrongdev.github.io/kbignum/)
          - 📦 [Maven Central](https://central.sonatype.com/artifact/io.github.gatrongdev/kbignum)

          **Full Changelog**: https://github.com/gatrongdev/kbignum/compare/$PREVIOUS_TAG...$VERSION
          EOF
          
          CHANGELOG=$(cat changelog.md)
          
          # Save changelog (escape newlines for GitHub Actions)
          {
            echo "changelog<<EOF"
            echo "$CHANGELOG"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: 🎉 Create GitHub Release
        if: steps.tag_check.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: KBigNum v${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
          files: |
            shared/build/libs/*.jar
            shared/build/outputs/**/*.aar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Success
        if: steps.tag_check.outputs.exists == 'false'
        run: |
          echo "🎉 Successfully created release v${{ steps.version.outputs.version }}"
          echo "🏷️ Tag: v${{ steps.version.outputs.version }}"
          echo "🔗 Release URL: https://github.com/gatrongdev/kbignum/releases/tag/v${{ steps.version.outputs.version }}"

      - name: ⏭️ Skip release
        if: steps.tag_check.outputs.exists == 'true'
        run: |
          echo "⏭️ Skipping release creation - tag v${{ steps.version.outputs.version }} already exists"